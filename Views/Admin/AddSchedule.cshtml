﻿@using DP.Models
@model DP.Models.AddScheduleViewModel

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Добавить слот</title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.7-beta.19/jquery.inputmask.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(to bottom, #0056b3 0%, #d52b1e 60%, #f0f6fc);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .schedule-container {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 450px;
            text-align: center;
            border-top: 5px solid #0056b3;
        }

        h1 {
            font-size: 24px;
            color: #0056b3;
            margin-bottom: 25px;
            font-weight: 600;
        }

        .form-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
            text-align: left;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            font-weight: 500;
            color: #333;
            display: block;
            margin-bottom: 8px;
        }

        select, input[type="date"], input[type="time"] {
            width: 100%;
            padding: 12px 15px;
            font-size: 16px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

            select:focus, input:focus {
                border-color: #0056b3;
                outline: none;
                box-shadow: 0 0 0 3px rgba(0, 86, 179, 0.1);
            }

        .btn-submit {
            background-color: #d52b1e;
            color: white;
            border: none;
            padding: 14px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-weight: 600;
            transition: background-color 0.3s;
            margin-top: 10px;
        }

            .btn-submit:hover {
                background-color: #b82217;
            }

        .btn-back {
            display: inline-block;
            background-color: #6c757d;
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
            margin-top: 10px;
            text-align: center;
        }

            .btn-back:hover {
                background-color: #5a6268;
            }

        .alert {
            margin: 15px 0;
            padding: 15px;
            border-radius: 4px;
            text-align: left;
        }

        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
        }

        .alert-info {
            background-color: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }

        #testSelect, #excursionSelect {
            display: none;
        }

        @@media (max-width: 768px) {
            .schedule-container {
                padding: 25px;
                margin: 15px;
            }

            h1 {
                font-size: 22px;
            }

            select, input {
                padding: 10px 12px;
                font-size: 15px;
            }

            .btn-submit, .btn-back {
                padding: 12px;
                font-size: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="schedule-container">
        <h1>Добавить слот</h1>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">@TempData["Success"]</div>
        }
        @if (ViewData["debug"] != null)
        {
            <div class="alert alert-info">@ViewData["debug"]</div>
        }

        <form method="post" class="form-container" asp-action="AddSchedule">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="slotType">Тип слота</label>
                @{
                    var slotTypeList = Enum.GetValues(typeof(SlotType))
                    .Cast<SlotType>()
                    .Select(t => new SelectListItem
                    {
                        Value = ((int)t).ToString(),
                        Text = t.ToString()
                    }).ToList();
                }
                @Html.DropDownListFor(m => m.Type,
                         slotTypeList,
                         "-- Выберите тип --",
                         new { @id = "slotType" })
            </div>

            <div id="testSelect" class="form-group">
                <label for="testDropdown">Проф. проба</label>
                @Html.DropDownListFor(m => m.SelectedEventId,
                         Model.Proba,
                         "-- Выберите профпробу --",
                         new { @id = "testDropdown" })
            </div>

            <div id="excursionSelect" class="form-group">
                <label for="excursionDropdown">Экскурсия</label>
                @Html.DropDownListFor(m => m.SelectedEventId,
                         Model.Excursions,
                         "-- Выберите экскурсию --",
                         new { @id = "excursionDropdown" })
            </div>

            <div class="form-group">
                <label for="Date">Дата</label>
                @Html.TextBoxFor(m => m.Date,
                         "{0:yyyy-MM-dd}",
                         new { type = "date", @id = "Date", required = "required" })
            </div>

            <div class="form-group">
                <label for="FromTime">Время начала</label>
                @Html.TextBoxFor(m => m.FromTime,
                         "{0:hh\\:mm}",
                         new { type = "time", step = "60", @id = "FromTime", required = "required" })
            </div>

            <div class="form-group">
                <label for="ToTime">Время окончания</label>
                @Html.TextBoxFor(m => m.ToTime,
                         "{0:hh\\:mm}",
                         new { type = "time", step = "60", @id = "ToTime", required = "required" })
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <button type="submit" class="btn-submit">Сохранить</button>
            <a href="/Home/Index" class="btn-back">Вернуться назад</a>
        </form>
    </div>

    <script>
        $(function() {
            function toggleSelects() {
                var val = $('#slotType').val();
                $('#testSelect, #excursionSelect').hide();
                $('#testDropdown, #excursionDropdown').prop('disabled', true).removeAttr('name');

                if (val === '1') {
                    $('#testSelect').show();
                    $('#testDropdown').prop('disabled', false).attr('name', 'SelectedEventId');
                } else if (val === '2') {
                    $('#excursionSelect').show();
                    $('#excursionDropdown').prop('disabled', false).attr('name', 'SelectedEventId');
                }
            }

            $('#slotType').change(toggleSelects);
            toggleSelects();
        });
    </script>
</body>
</html>
