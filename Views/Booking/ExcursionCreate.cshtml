<!DOCTYPE html>
<html lang="ru">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.7-beta.19/jquery.inputmask.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Создать новую заявку на экскурсию</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #0056b3 0%, #d52b1e 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .booking-container {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 450px;
            text-align: center;
            border-top: 5px solid #0056b3;
        }

        h1 {
            font-size: 24px;
            color: #0056b3;
            margin-bottom: 25px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

        /* Увеличенный отступ после музея */
        .museum-group {
            margin-bottom: 30px;
            position: relative;
        }

        /* Дополнительный отступ перед учебным заведением */
        .school-group {
            margin-top: 10px;
        }

        label {
            font-weight: 500;
            color: #333;
            display: block;
            margin-bottom: 8px;
            font-size: 14px;
        }

        select, input {
            width: 100%;
            padding: 12px 15px;
            font-size: 15px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            box-sizing: border-box;
            transition: all 0.3s ease;
        }

            select:focus, input:focus {
                border-color: #0056b3;
                outline: none;
                box-shadow: 0 0 0 3px rgba(0, 86, 179, 0.1);
            }

        .btn-submit {
            background-color: #d52b1e;
            color: white;
            border: none;
            padding: 14px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-weight: 600;
            transition: background-color 0.3s;
            margin-top: 10px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

            .btn-submit:hover {
                background-color: #b82217;
            }

        .btn {
            display: inline-block;
            background-color: #0056b3;
            color: white;
            padding: 12px 25px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
            margin-top: 15px;
            width: 100%;
            box-sizing: border-box;
            text-align: center;
        }

            .btn:hover {
                background-color: #003d82;
            }

        .alert {
            margin-top: 20px;
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            padding: 15px;
            border-radius: 4px;
            text-align: left;
            font-size: 14px;
        }

            .alert p {
                margin: 5px 0;
            }

        /* Стили для ошибок */
        .field-validation-error {
            color: #d52b1e;
            font-size: 13px;
            display: block;
            margin-top: 5px;
        }

        .file-section {
            margin-top: 15px;
            text-align: left;
        }

        .disabled-link {
            color: #999;
            cursor: not-allowed;
            pointer-events: none;
            text-decoration: none;
        }

        .template-section {
            margin-top: 25px;
            padding-top: 15px;
            border-top: 1px solid #eee;
        }

        @@media (max-width: 768px) {
            .booking-container {
                padding: 25px 20px;
            }

            h1 {
                font-size: 20px;
            }

            select, input {
                padding: 10px 12px;
            }

            .btn-submit, .btn {
                padding: 12px;
                font-size: 15px;
            }

            .museum-group {
                margin-bottom: 25px;
            }
        }
    </style>
</head>
<body>
    <div class="booking-container">
        <h1>Создать новую заявку</h1>
        <form id="bookingForm" method="post" enctype="multipart/form-data" class="form-container">
            <input type="hidden" name="eventType" value="@ViewBag.EventType" />

            <!-- Группа музея с увеличенным отступом -->
            <div class="form-group museum-group">
                <label for="museumSelect">Музей:</label>
                <select id="museumSelect" name="MuseumId" required>
                    <option value="">Выберите музей</option>
                    @foreach (var museum in ViewBag.Museums)
                    {
                        <option value="@museum.Id">@museum.Name</option>
                    }
                </select>
                <span id="museumError" class="field-validation-error" style="display:none;"></span>
            </div>

            <!-- Группа учебного заведения с дополнительным отступом -->
            <div class="form-group school-group">
                <label for="schoolName">Учебное заведение:</label>
                <input type="text" id="schoolName" name="schoolName" required placeholder="Введите название вашего учебного заведения" />
                <span id="schoolError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="peopleCount">Количество человек:</label>
                <input type="number" id="peopleCount" name="peopleCount" min="1" max="50" value="1" required />
                <span id="countError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="BookingDate">Дата посещения:</label>
                <input type="text" id="excursionBookingDate" name="bookingDate" placeholder="Выберите дату" readonly disabled />
                <span id="dateError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="TimeRange">Время начала:</label>
                <select id="excursionTimeRange" name="timeRange" required disabled>
                    <option value="">Сначала выберите дату</option>
                </select>
                <span id="timeError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group template-section">
                <label>Скачать шаблон списка участников (Excel):</label>
                <a href="#" id="downloadTemplateLink">Скачать шаблон участников</a>
                <div class="file-section">
                    <label for="excelFile" style="display: block; margin-top: 10px; margin-bottom: 5px;">Загрузите заполненный файл:</label>
                    <input type="file" id="excelFile" name="excelFile" accept=".xlsx,.xls" />
                    <span id="fileError" class="field-validation-error" style="display:none;"></span>
                </div>
            </div>

            <button type="submit" class="btn-submit">Отправить заявку</button>
            <a href="/Booking" class="btn">Назад</a>
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </div>

    <script>
        $(document).ready(function() {
            // Функция очистки ошибок
            function clearErrors() {
                $('.field-validation-error').each(function() {
                    $(this).hide().text('');
                });
            }

            // Обработчик изменения полей
            $("input, select").on('input change', function() {
                clearErrors();
            });

              function updateDownloadLink() {
            const museum = $("#museumSelect").val();
            const school = $("#schoolName").val();
            const count = $("#peopleCount").val();

            // Проверка только основных обязательных полей
            if (!museum || !school || !count) {
                $("#downloadTemplateLink")
                    .addClass("disabled-link")
                    .attr("href", "javascript:void(0)")
                    .attr("title", "Заполните все обязательные поля");
                return;
            }

            const date = $("#excursionBookingDate").val() || "";
            const time = $("#excursionTimeRange").val() || "";
            const eventName = $("#museumSelect option:selected").text() || "Мероприятие";

            let link = `@Url.Action("DownloadExcelTemplate", "Booking")?schoolName=${encodeURIComponent(school)}&peopleCount=${count}&eventName=${encodeURIComponent(eventName)}`;

            if (date) {
                link += `&bookingDate=${encodeURIComponent(date)}`;
            }
            if (time) {
                link += `&timeRange=${encodeURIComponent(time)}`;
            }

            $("#downloadTemplateLink")
                .removeClass("disabled-link")
                .attr("href", link)
                .removeAttr("title");
        }

        // Подписываемся на изменения всех полей
        $("#museumSelect, #schoolName, #peopleCount, #excursionBookingDate, #excursionTimeRange").on("input change", updateDownloadLink);
        updateDownloadLink();

        // Обработчик клика на ссылке скачивания (ИСПРАВЛЕННЫЙ)
        $("#downloadTemplateLink").on("click", function(e) {
            clearErrors();
            let hasError = false;

            // Проверяем только основные поля
            const requiredFields = [
                {id: "#museumSelect", name: "Музей", errorId: "#museumError"},
                {id: "#schoolName", name: "Учебное заведение", errorId: "#schoolError"},
                {id: "#peopleCount", name: "Количество человек", errorId: "#countError"}
            ];

            requiredFields.forEach(field => {
                if (!$(field.id).val()) {
                    let errorElement = $(field.errorId);
                    errorElement.text(`Поле "${field.name}" обязательно`).show();
                    hasError = true;
                }
            });

            if (hasError) {
                e.preventDefault();
                const firstError = $('.field-validation-error:visible').first();
                if (firstError.length) {
                    $('html, body').animate({
                        scrollTop: firstError.offset().top - 100
                    }, 500);
                }
            }
        });

        // Обработчик отправки формы (ОСТАЕТСЯ ПОЛНАЯ ПРОВЕРКА)
        $("#bookingForm").on("submit", function(e) {
            clearErrors();
            let hasError = false;
            const requiredFields = [
                {id: "#museumSelect", name: "Музей", errorId: "#museumError"},
                {id: "#schoolName", name: "Учебное заведение", errorId: "#schoolError"},
                {id: "#peopleCount", name: "Количество человек", errorId: "#countError"},
                {id: "#excursionBookingDate", name: "Дата посещения", errorId: "#dateError"},
                {id: "#excursionTimeRange", name: "Время начала", errorId: "#timeError"}
            ];

            requiredFields.forEach(field => {
                if (!$(field.id).val()) {
                    let errorElement = $(field.errorId);
                    errorElement.text(`Поле "${field.name}" обязательно`).show();
                    hasError = true;
                }
            });

            const fileInput = $("input[name='excelFile']")[0];
            if (!fileInput.files || fileInput.files.length === 0) {
                $("#fileError")
                    .text("Пожалуйста, загрузите файл Excel со списком участников")
                    .show();
                hasError = true;
            }

            if (hasError) {
                e.preventDefault();
                const firstError = $('.field-validation-error:visible').first();
                if (firstError.length) {
                    $('html, body').animate({
                        scrollTop: firstError.offset().top - 100
                    }, 500);
                }
                return false;
            }

            return true;
        });

            // Функционал выбора даты и времени
            console.log("Document ready");
            let availableExcursionDates = [];

            $("#museumSelect").on("change", function() {
                clearErrors();
                const museumId = $(this).val();
                console.log("Selected museum ID:", museumId);

                $("#excursionBookingDate").val("").prop("disabled", true);
                $("#excursionTimeRange").html('<option value="">Сначала выберите дату</option>').prop("disabled", true);

                if (!museumId) return;

                $.getJSON("/Booking/GetAvailableExcursionDates", { museumId: museumId })
                    .done(function(dates) {
                        console.log("Received dates:", dates);
                        availableExcursionDates = dates;

                        $("#excursionBookingDate")
                            .prop("disabled", false)
                            .datepicker({
                                dateFormat: "yy-mm-dd",
                                minDate: 0,
                                maxDate: "+1m",
                                beforeShowDay: function(date) {
                                    const dateString = $.datepicker.formatDate("yy-mm-dd", date);
                                    const available = availableExcursionDates.includes(dateString);
                                    console.log(`Date ${dateString} available:`, available);
                                    return [available];
                                },
                                onSelect: function(dateText) {
                                    console.log("Selected date:", dateText);
                                    loadAvailableExcursionTimes(museumId, dateText);
                                }
                            })
                            .attr("readonly", true);
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("Dates load error:", textStatus, errorThrown);
                        $("#dateError").text("Ошибка загрузки доступных дат").show();
                    });
            });

            function loadAvailableExcursionTimes(museumId, selectedDate) {
                console.log(`Loading times for museum ${museumId}, date ${selectedDate}`);
                $("#excursionTimeRange").html('<option value="">Загрузка...</option>').prop("disabled", true);

                $.getJSON("/Booking/GetAvailableExcursionTimes", {
                    museumId: museumId,
                    date: selectedDate
                })
                .done(function(timeRanges) {
                    console.log("Received time ranges:", timeRanges);
                    let options = '<option value="">Выберите время</option>';

                    if (timeRanges.length === 0) {
                        options = '<option value="">Нет доступных времён</option>';
                    } else {
                        timeRanges.forEach(range => {
                            options += `<option value="${range}">${range}</option>`;
                        });
                    }

                    $("#excursionTimeRange").html(options).prop("disabled", false);
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.error("Times load error:", textStatus, errorThrown);
                    $("#excursionTimeRange").html('<option value="">Ошибка загрузки</option>').prop("disabled", false);
                    $("#timeError").text("Ошибка загрузки доступных времён").show();
                });
            }
        });
    </script>
</body>
</html>