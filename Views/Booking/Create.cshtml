<!DOCTYPE html>
<html lang="ru">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.7-beta.19/jquery.inputmask.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Создать новую заявку на профпробу</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(to bottom, #0056b3 0%, #d52b1e 60%, #f0f6fc);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .booking-container {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 450px;
            text-align: center;
            border-top: 5px solid #0056b3;
        }

        h1 {
            font-size: 24px;
            color: #0056b3;
            margin-bottom: 25px;
            font-weight: 600;
        }

        .form-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }

        label {
            font-weight: 500;
            color: #333;
            display: block;
            margin-bottom: 8px;
        }

        select, input {
            width: 100%;
            padding: 12px 15px;
            font-size: 16px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

            select:focus, input:focus {
                border-color: #0056b3;
                outline: none;
                box-shadow: 0 0 0 3px rgba(0, 86, 179, 0.1);
            }

        .btn-submit {
            background-color: #d52b1e;
            color: white;
            border: none;
            padding: 14px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-weight: 600;
            transition: background-color 0.3s;
            margin-top: 10px;
        }

            .btn-submit:hover {
                background-color: #b82217;
            }

        .btn {
            display: inline-block;
            background-color: #0056b3;
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
            margin-top: 15px;
            width: 100%;
            box-sizing: border-box;
            text-align: center;
        }

            .btn:hover {
                background-color: #003d82;
            }

        .alert {
            margin-top: 20px;
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            padding: 15px;
            border-radius: 4px;
            text-align: left;
        }

            .alert p {
                margin: 5px 0;
            }

        .events-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .event-card {
            border: 1px solid #ced4da;
            border-radius: 6px;
            padding: 12px;
            cursor: pointer;
            transition: background-color 0.3s, border-color 0.3s;
            background-color: #f9f9f9;
            word-break: break-word;
        }

            .event-card:hover {
                background-color: #e9f2fb;
                border-color: #0056b3;
            }

            .event-card.selected {
                background-color: #dceeff;
                border-color: #0056b3;
                font-weight: bold;
            }

        .event-details {
            display: none;
            border: 1px solid #ced4da;
            border-radius: 6px;
            padding: 12px;
            background-color: #f0f8ff;
            margin-top: 10px;
            font-size: 14px;
            color: #333;
            white-space: normal;
            word-wrap: break-word;
        }

        .field-validation-error {
            color: #d52b1e;
            font-size: 13px;
            display: block;
            margin-top: 5px;
        }

        .file-section {
            margin-top: 15px;
            text-align: left;
        }

        .template-notice {
            background-color: #fff9db;
            border-left: 4px solid #ffd43b;
            padding: 10px 15px;
            margin-top: 10px;
            font-size: 14px;
            border-radius: 4px;
        }

        @@media (max-width: 768px) {
            .booking-container {
                padding: 25px;
                margin: 15px;
            }

            h1 {
                font-size: 22px;
            }

            select, input {
                padding: 10px 12px;
                font-size: 15px;
            }

            .btn-submit, .btn {
                padding: 12px;
                font-size: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="booking-container">
        <h1>Создать новую заявку</h1>
        <form id="profForm" method="post" enctype="multipart/form-data" class="form-container">
            <input type="hidden" name="eventType" value="@ViewBag.EventType" />

            <div class="form-group prof-group">
                <label for="ProfProbaId">Выберите профпробу:</label>
                <select id="ProfProbaId" name="ProfProbaId" required>
                    <option value="">-- Выберите профпробу --</option>
                    @foreach (var item in ViewBag.ProfProby)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                <span id="profError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group events-section">
                <label>События профпробы:</label>
                <span id="eventError" class="field-validation-error" style="display:none;"></span>
                <div id="eventsList" class="events-list"></div>
            </div>

            <input type="hidden" id="EventId" name="eventId" />
            <div id="eventDetails" class="event-details"></div>

            <div class="form-group">
                <label for="schoolName">Учебное заведение:</label>
                <input type="text" id="schoolName" name="schoolName" placeholder="Введите название вашего учебного заведения" required />
                <span id="schoolError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="peopleCount">Количество человек:</label>
                <input type="number" id="peopleCount" name="peopleCount" min="1" max="30" required />
                <span id="countError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="bookingDate">Дата бронирования:</label>
                <input id="bookingDate" name="bookingDate" type="text" placeholder="Выберите дату" readonly />
                <span id="dateError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group">
                <label for="timeRange">Время:</label>
                <select id="timeRange" name="timeRange" required disabled>
                    <option value="">-- Сначала выберите дату --</option>
                </select>
                <span id="timeError" class="field-validation-error" style="display:none;"></span>
            </div>

            <div class="form-group template-section">
                <label>Заполните все поля для скачивания шаблона списка участников (Excel):</label>
                <a href="#" id="downloadTemplateLink">Скачать шаблон участников</a>
                <div class="file-section">
                    <label for="excelFile" style="display: block; margin-top: 10px; margin-bottom: 5px;">Загрузите заполненный файл:</label>
                    <input type="file" id="excelFile" name="excelFile" accept=".xlsx,.xls" />
                    <span id="fileError" class="field-validation-error" style="display:none;"></span>
                </div>
            </div>

            <button type="submit" class="btn-submit">Создать заявку</button>
            <a href="/Booking" class="btn">Вернуться назад</a>
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </div>

    <script>
        $(document).ready(function() {
            // Функция очистки ошибок
            function clearErrors() {
                $('.field-validation-error').each(function() {
                    $(this).hide().text('');
                });
            }

            // Обработчик изменения полей
            $("input, select").on('input change', function() {
                clearErrors();
            });

            // Функция обновления ссылки скачивания
            function updateDownloadLink() {
                const profId = $("#ProfProbaId").val();
                const school = $("#schoolName").val();
                const count = $("#peopleCount").val();

                // Проверка обязательных полей
                if (!profId || !school || !count) {
                    $("#downloadTemplateLink")
                        .addClass("disabled-link")
                        .attr("href", "javascript:void(0)")
                        .attr("title", "Заполните все обязательные поля");
                    return;
                }

                const date = $("#bookingDate").val() || "";
                const time = $("#timeRange").val() || "";
                const profName = $("#ProfProbaId option:selected").text() || "Профпроба";
                const eventName = $(".event-card.selected").text() || "Событие";

                let link = `@Url.Action("DownloadExcelTemplate", "Booking")?schoolName=${encodeURIComponent(school)}&peopleCount=${count}&profName=${encodeURIComponent(profName)}`;

                if (date) {
                    link += `&bookingDate=${encodeURIComponent(date)}`;
                }
                if (time) {
                    link += `&timeRange=${encodeURIComponent(time)}`;
                }

                $("#downloadTemplateLink")
                    .removeClass("disabled-link")
                    .attr("href", link)
                    .removeAttr("title");
            }

            $("#ProfProbaId, #schoolName, #peopleCount, #bookingDate, #timeRange").on("input change", updateDownloadLink);

            $(document).on('click', '.event-card', updateDownloadLink);

            updateDownloadLink();

            

            $("#profForm").on("submit", function(e) {
                clearErrors();

                let hasError = false;
                const requiredFields = [
                    {id: "#ProfProbaId", name: "Профпроба", errorId: "#profError"},
                    {id: "#schoolName", name: "Учебное заведение", errorId: "#schoolError"},
                    {id: "#peopleCount", name: "Количество человек", errorId: "#countError"},
                    {id: "#bookingDate", name: "Дата бронирования", errorId: "#dateError"},
                    {id: "#timeRange", name: "Время", errorId: "#timeError"}
                ];

                requiredFields.forEach(field => {
                    if (!$(field.id).val()) {
                        let errorElement = $(field.errorId);
                        errorElement.text(`Поле "${field.name}" обязательно`).show();
                        hasError = true;
                    }
                });


                const fileInput = $("input[name='excelFile']")[0];
                if (!fileInput.files || fileInput.files.length === 0) {
                    $("#fileError")
                        .text("Пожалуйста, загрузите файл Excel со списком участников")
                        .show();
                    hasError = true;
                }

                if (hasError) {
                    e.preventDefault();

                    const firstError = $('.field-validation-error:visible').first();
                    if (firstError.length) {
                        $('html, body').animate({
                            scrollTop: firstError.offset().top - 100
                        }, 500);
                    }
                    return false;
                }

                return true;
            });

            let availableDates = [];

            $("#ProfProbaId").on("change", function() {
                clearErrors();
                const profProbaId = $(this).val();

                $("#eventsList").empty();
                $("#eventDetails").hide().empty();
                $("#EventId").val("");

                $("#bookingDate")
                    .val("")
                    .prop("disabled", true)
                    .datepicker("destroy");

                $("#timeRange")
                    .empty()
                    .append('<option value="">-- Сначала выберите дату --</option>')
                    .prop("disabled", true);

                if (!profProbaId) return;

                $.getJSON("/Booking/GetEventsByProfProba", { profProbaId: profProbaId })
                    .done(function(events) {
                        if (events.length === 0) {
                            $("#eventsList").append("<div>События не найдены</div>");
                        } else {
                            events.forEach(function(item) {
                                const card = $("<div>")
                                    .addClass("event-card")
                                    .text(item.name)
                                    .attr("data-id", item.id)
                                    .css("cursor", "pointer");

                                card.on("click", function() {
                                    $(".event-card").removeClass("selected").css("font-weight", "normal");
                                    $(this).addClass("selected").css("font-weight", "bold");
                                    $("#EventId").val(item.id);
                                    updateDownloadLink();

                                    $.getJSON("/Booking/GetEventDetails", { eventId: item.id })
                                        .done(function(details) {
                                            $("#eventDetails").html(`
                                                <h4 style="margin-top: 0;">${details.name}</h4>
                                                ${details.description ? `<p>${details.description}</p>` : ""}
                                            `).show();
                                        })
                                        .fail(function() {
                                            $("#eventDetails")
                                                .html("<p>Ошибка загрузки деталей события</p>")
                                                .show();
                                        });
                                });

                                $("#eventsList").append(card);
                            });
                        }
                    })
                    .fail(function() {
                        $("#eventsList").append("<div>Ошибка загрузки событий</div>");
                    });

                $.getJSON("/Booking/GetAvailableDates", { profProbaId: profProbaId })
                    .done(function(dateList) {
                        availableDates = dateList.map(dateStr => {
                            const d = new Date(dateStr);
                            return $.datepicker.formatDate("yy-mm-dd", d);
                        });

                        $("#bookingDate")
                            .prop("disabled", false)
                            .datepicker("destroy")
                            .datepicker({
                                dateFormat: "yy-mm-dd",
                                minDate: 0,
                                maxDate: "+1m",
                                beforeShowDay: function(date) {
                                    const formatted = $.datepicker.formatDate("yy-mm-dd", date);
                                    return [availableDates.includes(formatted)];
                                },
                                onSelect: function(dateText) {
                                    clearErrors();
                                    updateDownloadLink();

                                    $("#timeRange")
                                        .empty()
                                        .append('<option value="">Загрузка...</option>')
                                        .prop("disabled", true);

                                    $.getJSON("/Booking/GetAvailableTimes", {
                                        profProbaId: profProbaId,
                                        date: dateText
                                    }).done(function(timeRanges) {
                                        if (timeRanges.length === 0) {
                                            $("#timeRange")
                                                .empty()
                                                .append('<option value="">Нет доступных времён</option>');
                                            return;
                                        }

                                        $("#timeRange")
                                            .empty()
                                            .append('<option value="">Выберите время</option>');

                                        timeRanges.forEach(function(range) {
                                            $("#timeRange").append(`<option value="${range}">${range}</option>`);
                                        });

                                        $("#timeRange").prop("disabled", false);
                                    }).fail(function() {
                                        $("#timeRange")
                                            .empty()
                                            .append('<option value="">Ошибка загрузки времён</option>')
                                            .prop("disabled", false);
                                        $("#timeError").text("Ошибка загрузки доступных времён").show();
                                    });
                                }
                            })
                            .attr("readonly", true);
                    })
                    .fail(function() {
                        $("#bookingDate")
                            .val("")
                            .prop("disabled", true);
                        $("#dateError").text("Ошибка загрузки доступных дат").show();
                    });
            });
        });
    </script>
</body>
</html>