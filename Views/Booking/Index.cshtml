@model IEnumerable<DP.Models.Booking>
@using DP.Models

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Мои заявки</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(to bottom, #f0f6fc, #d4e3fc);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h1.centered {
            color: #0056b3;
            text-align: center;
            margin: 25px 0;
            font-size: 28px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            border-bottom: 2px solid #d52b1e;
            padding-bottom: 10px;
            display: inline-block;
        }

        h2.section-title {
            color: #0056b3;
            font-size: 22px;
            font-weight: 500;
            margin-top: 40px;
            text-align: left;
            padding-left: 15px;
            border-left: 4px solid #0056b3;
        }

        .button-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
            margin: 30px 0;
        }

        .center-button, .btn {
            background-color: #d52b1e;
            color: white;
            padding: 12px 25px;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
            text-align: center;
            min-width: 200px;
            border: none;
            cursor: pointer;
        }

        .btn-secondary {
            background-color: #6c757d;
        }

        .center-button:hover, .btn:hover {
            opacity: 0.9;
        }

        .booking {
            margin: 30px auto;
            padding: 20px;
            color: #d52b1e;
            font-size: 18px;
            font-weight: 500;
            text-align: center;
            background-color: rgba(255, 255, 255, 0.8);
            border-radius: 8px;
            max-width: 500px;
        }

        .alert {
            background-color: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border: 1px solid #f5c6cb;
        }

        .request-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }

        .request-card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
            flex: 1;
            min-width: 300px;
        }

        .request-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .request-title {
            font-weight: bold;
            color: #0056b3;
        }

        .request-status {
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
        }

        .status-new {
            background-color: #f2f2f2;
            color: #333;
        }

        .status-confirmed {
            background-color: #c1ffa55e;
            color: #2a6817;
        }

        .status-rejected {
            background-color: #ffa5a557;
            color: #8b0000;
        }

        .status-completed {
            background-color: #e6e6ff;
            color: #4b0082;
        }

        .request-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 10px;
            margin-bottom: 15px;
        }

        .detail-item {
            margin-bottom: 8px;
        }

        .detail-label {
            font-weight: bold;
            color: #666;
            font-size: 14px;
        }

        .detail-value {
            font-size: 15px;
        }

        .files-container {
            margin-top: 15px;
        }

        .file-link {
            display: block;
            margin-bottom: 5px;
            color: #0056b3;
            text-decoration: none;
            transition: color 0.2s;
        }

            .file-link:hover {
                color: #d52b1e;
                text-decoration: underline;
            }

        .feedback-section {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
            flex: 0 0 300px;
        }

        .feedback-title {
            font-weight: bold;
            color: #0056b3;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .feedback-form {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin-top: 10px;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .form-control {
            width: 100%;
            padding: 8px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .btn-submit {
            background-color: #17a2b8;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 8px 15px;
            cursor: pointer;
            font-weight: 500;
        }

            .btn-submit:hover {
                background-color: #138496;
            }

        .feedback-content {
            margin-top: 15px;
        }

        .feedback-rating {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .feedback-text {
            line-height: 1.5;
        }

        @@media (max-width: 768px) {
            .request-container {
                flex-direction: column;
            }

            .request-card, .feedback-section {
                width: 100%;
                min-width: unset;
            }

            .center-button, .btn {
                width: 100%;
                box-sizing: border-box;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="centered">Все заявки</h1>
        @if (Model != null && Model.Any())
        {
            <h2 class="section-title">Заявки на профпробы</h2>

            @foreach (var booking in Model)
            {
                Feedback feedback = null;
                if (ViewBag.Feedbacks != null)
                {
                    foreach (var f in ViewBag.Feedbacks as List<Feedback>)
                    {
                        if (f.BookingId == booking.ID)
                        {
                            feedback = f;
                            break;
                        }
                    }
                }

                <div class="request-container">
                    <div class="request-card">
                        <div class="request-header">
                            <div class="request-title">@booking.ProfProba?.Name</div>
                            <div class="request-status @GetStatusClass(booking.Status)">@booking.Status</div>
                        </div>

                        <div class="request-details">
                            <div class="detail-item">
                                <div class="detail-label">ФИО</div>
                                <div class="detail-value">@booking.User?.FullName</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Email</div>
                                <div class="detail-value">@booking.User?.Email</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Телефон</div>
                                <div class="detail-value">@booking.User?.Phone</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Учебное заведение</div>
                                <div class="detail-value">@booking.SchoolName</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Кол-во человек</div>
                                <div class="detail-value">@booking.PeopleCount</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Дата</div>
                                <div class="detail-value">@booking.BookingDate.ToString("dd.MM.yyyy")</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Время</div>
                                <div class="detail-value">@booking.TimeRange</div>
                            </div>
                        </div>

                        @if (booking.Files != null && booking.Files.Any())
                        {
                            <div class="files-container">
                                <div class="detail-label">Файлы:</div>
                                @foreach (var file in booking.Files)
                                {
                                    <a class="file-link" href="@Url.Action("DownloadFile", "Booking", new { id = file.Id })">
                                        @file.FileName
                                    </a>
                                }
                            </div>
                        }
                    </div>

                    <div class="feedback-section">
                        <div class="feedback-title">Отзыв</div>

                        @if (booking.Status == "Завершено")
                        {
                            if (feedback == null)
                            {
                                <div class="feedback-form">
                                    <form method="post" action="@Url.Action("CreateFeedback", "Booking")">
                                        <input type="hidden" name="bookingId" value="@booking.ID" />
                                        <input type="hidden" name="type" value="prof" />

                                        <div class="form-group">
                                            <label>Оценка (1-5)</label>
                                            <input type="number" name="rating" min="1" max="5" class="form-control" required />
                                        </div>

                                        <div class="form-group">
                                            <label>Текст отзыва</label>
                                            <textarea name="text" class="form-control" rows="4" required></textarea>
                                        </div>

                                        <button type="submit" class="btn-submit">Отправить отзыв</button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <div class="feedback-content">
                                    <div class="feedback-rating">Оценка: @feedback.Rating/5</div>
                                    <div class="feedback-text">@feedback.Text</div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Отзыв доступен после завершения мероприятия</p>
                        }
                    </div>
                </div>
            }
        }

        @if (ViewBag.Excursions != null && (ViewBag.Excursions as List<ExcursionBooking>).Any())
        {
            <h2 class="section-title">Заявки на экскурсии</h2>

            @foreach (var excursion in ViewBag.Excursions as List<ExcursionBooking>)
            {
                Feedback feedback = null;
                if (ViewBag.Feedbacks != null)
                {
                    foreach (var f in ViewBag.Feedbacks as List<Feedback>)
                    {
                        if (f.ExcursionBookingId == excursion.Id)
                        {
                            feedback = f;
                            break;
                        }
                    }
                }

                <div class="request-container">
                    <div class="request-card">
                        <div class="request-header">
                            <div class="request-title">@excursion.Museum?.Name</div>
                            <div class="request-status @GetStatusClass(excursion.Status)">@excursion.Status</div>
                        </div>

                        <div class="request-details">
                            <div class="detail-item">
                                <div class="detail-label">ФИО</div>
                                <div class="detail-value">@excursion.User?.FullName</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Email</div>
                                <div class="detail-value">@excursion.User?.Email</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Телефон</div>
                                <div class="detail-value">@excursion.User?.Phone</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Учебное заведение</div>
                                <div class="detail-value">@excursion.SchoolName</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Кол-во человек</div>
                                <div class="detail-value">@excursion.PeopleCount</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Дата</div>
                                <div class="detail-value">@excursion.BookingDate.ToShortDateString()</div>
                            </div>

                            <div class="detail-item">
                                <div class="detail-label">Время</div>
                                <div class="detail-value">@excursion.TimeRange</div>
                            </div>
                        </div>

                        @if (excursion.Files != null && excursion.Files.Any())
                        {
                            <div class="files-container">
                                <div class="detail-label">Файлы:</div>
                                @foreach (var file in excursion.Files)
                                {
                                    <a class="file-link" href="@Url.Action("DownloadExcursionFile", "Booking", new { id = file.Id })">
                                        @file.FileName
                                    </a>
                                }
                            </div>
                        }
                    </div>

                    <div class="feedback-section">
                        <div class="feedback-title">Отзыв</div>

                        @if (excursion.Status == "Завершено")
                        {
                            if (feedback == null)
                            {
                                <div class="feedback-form">
                                    <form method="post" action="@Url.Action("CreateFeedback", "Booking")">
                                        <input type="hidden" name="bookingId" value="@excursion.Id" />
                                        <input type="hidden" name="type" value="excursion" />

                                        <div class="form-group">
                                            <label>Оценка (1-5)</label>
                                            <input type="number" name="rating" min="1" max="5" class="form-control" required />
                                        </div>

                                        <div class="form-group">
                                            <label>Текст отзыва</label>
                                            <textarea name="text" class="form-control" rows="4" required></textarea>
                                        </div>

                                        <button type="submit" class="btn-submit">Отправить отзыв</button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <div class="feedback-content">
                                    <div class="feedback-rating">Оценка: @feedback.Rating/5</div>
                                    <div class="feedback-text">@feedback.Text</div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Отзыв доступен после завершения мероприятия</p>
                        }
                    </div>
                </div>
            }
        }

        @if ((Model == null || !Model.Any()) &&
        (ViewBag.Excursions == null || !(ViewBag.Excursions as List<ExcursionBooking>).Any()))
        {
            <p class="booking">Заявки не найдены</p>
        }

        <div class="button-container">
            <a class="center-button" href="/Booking/Create?eventType=MasterClass">Добавить заявку на проф пробы</a>
            <a class="center-button" href="/Booking/ExcursionCreate">Добавить заявку на экскурсию</a>
            <a href="/Home/Index" class="btn btn-secondary">Вернуться на главную</a>
        </div>
    </div>

    @functions {
        string GetStatusClass(string status)
        {
            switch (status)
            {
                case "Новое": return "status-new";
                case "Подтверждено": return "status-confirmed";
                case "Отклонено": return "status-rejected";
                case "Завершено": return "status-completed";
                default: return "";
            }
        }
    }
</body>
</html>